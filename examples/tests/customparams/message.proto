// Copyright 2020 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package tests.customparams.message.v1;

import "google/api/annotations.proto";
import "openapi/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/type/date.proto";
import "google/type/datetime.proto";

option go_package = "github.com/google/gnostic/apps/protoc-gen-openapi/examples/tests/bodymapping/message/v1;message";

option (openapi.file_params) = {
    version: "1.1.0"
    servers: [
        "https://library-example.googleapis.com",
        "https://library-example2.googleapis.com"
    ],
    authorizationDescribe: "dev: abc123 prod: adasd",
};

service Messaging {
    option (openapi.service_params) = {
        headers: [
            {
                name:"Authorization",
                pattern:"^(.*)$"
                description:"This is authorization header"
                required:true
                default:{
                    string:"Bearer abc123"
                }
            },
            {
                name:"x-custom-default-header",
                pattern:"^(.*)$"
                description:"This is request protocol header"
                required:true
                default:{
                    string:"default_value"
                }
            }
        ]
    };
    // Update Message Summary | This function updates a message.
    // (-- api-linter: core::0xxx::xxx=disabled
    //     aip.dev/not-precedent: We need to do this because reasons. --)
    rpc UpdateMessage(Message) returns(Message) {
        option (google.api.http) = {
            patch: "/v1/messages/{message_id}"
            body: "text"
        };
    }
    // Get Message Summary | This function gets a message.
    rpc GetMessage(Message) returns(Message) {
        option (google.api.http) = {
            get: "/v1/messages/{message_id}"
        };
    }

    rpc CreateMessage(Message) returns(Message) {
        option (google.api.http) = {
            post: "/v1/messages"
            body: "text"
        };
    }
}
message Message {
    string message_id = 1;
    string text = 2;
}
